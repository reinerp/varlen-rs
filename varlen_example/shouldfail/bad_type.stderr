error[E0412]: cannot find type `UndefinedType1` in this scope
 --> shouldfail/bad_type.rs:6:22
  |
6 |     header_variable: UndefinedType1,
  |                      ^^^^^^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `UndefinedType2` in this scope
 --> shouldfail/bad_type.rs:8:19
  |
8 |     mut_variable: UndefinedType2,
  |                   ^^^^^^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `UndefinedType3` in this scope
  --> shouldfail/bad_type.rs:11:11
   |
11 |     arr: [UndefinedType3; 4usize],
   |           ^^^^^^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `UndefinedType3` in this scope
  --> shouldfail/bad_type.rs:11:11
   |
4  | struct StructWithUndefinedTypes  {
   |                                - help: you might be missing a type parameter: `<UndefinedType3>`
...
11 |     arr: [UndefinedType3; 4usize],
   |           ^^^^^^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `UndefinedType3` in this scope
  --> shouldfail/bad_type.rs:11:11
   |
11 |     arr: [UndefinedType3; 4usize],
   |           ^^^^^^^^^^^^^^         - help: you might be missing a type parameter: `, UndefinedType3`
   |           |
   |           not found in this scope

error[E0277]: the trait bound `String: std::marker::Copy` is not satisfied
  --> shouldfail/bad_type.rs:19:22
   |
19 |     header_variable: RequiresCopy<String>,
   |                      ^^^^^^^^^^^^^^^^^^^^ the trait `std::marker::Copy` is not implemented for `String`
   |
note: required by a bound in `RequiresCopy`
  --> shouldfail/bad_type.rs:14:24
   |
14 | struct RequiresCopy<T: Copy>(T);
   |                        ^^^^ required by this bound in `RequiresCopy`

error[E0277]: the trait bound `Vec<String>: std::marker::Copy` is not satisfied
  --> shouldfail/bad_type.rs:21:19
   |
21 |     mut_variable: RequiresCopy<Vec<String>>,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::marker::Copy` is not implemented for `Vec<String>`
   |
note: required by a bound in `RequiresCopy`
  --> shouldfail/bad_type.rs:14:24
   |
14 | struct RequiresCopy<T: Copy>(T);
   |                        ^^^^ required by this bound in `RequiresCopy`

error[E0277]: the trait bound `Vec<Vec<String>>: std::marker::Copy` is not satisfied
  --> shouldfail/bad_type.rs:24:11
   |
24 |     arr: [RequiresCopy<Vec<Vec<String>>>; 4usize],
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::marker::Copy` is not implemented for `Vec<Vec<String>>`
   |
note: required by a bound in `RequiresCopy`
  --> shouldfail/bad_type.rs:14:24
   |
14 | struct RequiresCopy<T: Copy>(T);
   |                        ^^^^ required by this bound in `RequiresCopy`

error[E0277]: the trait bound `Vec<Vec<String>>: std::marker::Copy` is not satisfied
  --> shouldfail/bad_type.rs:24:10
   |
24 |     arr: [RequiresCopy<Vec<Vec<String>>>; 4usize],
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::marker::Copy` is not implemented for `Vec<Vec<String>>`
   |
note: required by a bound in `RequiresCopy`
  --> shouldfail/bad_type.rs:14:24
   |
14 | struct RequiresCopy<T: Copy>(T);
   |                        ^^^^ required by this bound in `RequiresCopy`

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> shouldfail/bad_type.rs:30:22
   |
30 |     header_variable: [u8],
   |                      ^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u8]`
   = note: only the last field of a struct may have a dynamically sized type
   = help: change the field's type to have a statically known size
help: borrowed types always have a statically known size
   |
30 |     header_variable: &[u8],
   |                      +
help: the `Box` type always has a statically known size and allocates its contents in the heap
   |
30 |     header_variable: Box<[u8]>,
   |                      ++++    +

error[E0277]: the size for values of type `[u16]` cannot be known at compilation time
  --> shouldfail/bad_type.rs:32:19
   |
32 |     mut_variable: [u16],
   |                   ^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u16]`
   = note: only the last field of a struct may have a dynamically sized type
   = help: change the field's type to have a statically known size
help: borrowed types always have a statically known size
   |
32 |     mut_variable: &[u16],
   |                   +
help: the `Box` type always has a statically known size and allocates its contents in the heap
   |
32 |     mut_variable: Box<[u16]>,
   |                   ++++     +

error[E0277]: the size for values of type `[u32]` cannot be known at compilation time
  --> shouldfail/bad_type.rs:35:10
   |
35 |     arr: [[u32]; 4],
   |          ^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u32]`
   = note: slice and array elements must have `Sized` type

error[E0277]: the size for values of type `[u32]` cannot be known at compilation time
  --> shouldfail/bad_type.rs:35:10
   |
35 |     arr: [[u32]; 4],
   |          ^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u32]`
note: required by a bound in `ArrayMarker`
  --> $WORKSPACE/varlen/src/marker.rs
   |
   | pub struct ArrayMarker<T>(core::marker::PhantomPinned, core::marker::PhantomData<[T]>);
   |                        ^ required by this bound in `ArrayMarker`

error[E0277]: the size for values of type `[u32]` cannot be known at compilation time
   --> shouldfail/bad_type.rs:35:10
    |
35  |     arr: [[u32]; 4],
    |          ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u32]`
note: required by a bound in `ArrayInitializer`
   --> $WORKSPACE/varlen/src/lib.rs
    |
    | pub unsafe trait ArrayInitializer<T> {
    |                                   ^ required by this bound in `ArrayInitializer`
